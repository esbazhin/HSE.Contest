@model LoginViewModel

<h2>Вход на сайт</h2>

<form asp-action="Login" asp-controller="Users" asp-area="Administration" asp-anti-forgery="true">
        <div class="validation" asp-validation-summary="ModelOnly" />
        <div>
            <div class="form-group">
                <label asp-for="Email">Введите Email</label>
                <input type="text" asp-for="Email" />
                <span asp-validation-for="Email" />
            </div>
            <div class="form-group">
                <label asp-for="Password">Введите пароль</label>
                <input asp-for="Password" />
                <span asp-validation-for="Password" />
            </div>
            <div class="form-group">
                <input type="submit" value="Войти" class="btn btn-outline-dark" />
            </div>
        </div>
    </form>

@*<div id="app"></div>

@section Scripts{
    <script>
        let form = { "login": "", "password": "" };
        new Vue({
            el: '#app',
            data: {
                form: form,
            },
            methods: {                
                send: function () {
                    var http = new XMLHttpRequest();
                    var url = './LoginJson';
                    var data = 'json=' + encodeURIComponent(JSON.stringify(this.group));
                    if (this.isUpdate) {
                        url = './UpdateGroup';
                    }
                    http.open('POST', url, true);

                    //Send the proper header information along with the request
                    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

                    var that = this;
                    http.onreadystatechange = function () {//Call a function when the state changes.
                        if (http.readyState == 4 && http.status == 200) {
                            if (http.responseText != 'error') {
                                document.location.href = http.responseText;
                            }
                            else {
                                that.$message.error('An error occured. Try again!');
                            }
                        }
                    }
                    http.send(data);
                },
                
                hasErrors() {
                    return this.form.login == "" || this.form.password == "";
                }
            },
            template: `
                <div>
                <a-form >
                    <a-form-item id="login" :validate-status="form.login != '' ? '' : 'error'">
                        <a-input
                            v-model="form.login"
                            v-decorator="[
                            'login',
                            { rules: [{ required: true, message: 'Please input your username!' }] },
                            ]"
                            placeholder="E-mail"
                        >
                            <a-icon slot="prefix" type="user" style="color:rgba(0,0,0,.25)" />
                        </a-input>
                    </a-form-item>
                    <a-form-item id="password" :validate-status="form.password != '' ? '' : 'error'">
                        <a-input
                            v-model="form.password"
                            v-decorator="[   
                                'password',
                                { rules: [{ required: true, message: 'Please input your Password!' }] },
                                ]"
                            type="password"
                            placeholder="Password"
                        >
                            <a-icon slot="prefix" type="lock" style="color:rgba(0,0,0,.25)" />
                        </a-input>
                    </a-form-item>
                    <a-form-item>
                        <a-button type="primary" html-type="submit" :disabled="hasErrors()" @@click="send">
                            Log in
                        </a-button>
                    </a-form-item>
                </a-form>
            </div>
                `,
        });
    </script>
}*@